●●●●●●●警告●●●●●●●警告●●●●●●●警告●●●●●●●
本ソフトのリリースに際してはできるだけの動作確認をしていますが、本ソ
フトが内包する潜在的問題などの原因により、OSが起動しなくなったり、OS
動作中に突然パニックするなどの可能性があります。このような事態の発生
に対して、当方は一切の責任を負いませんのでご理解ください。発生した損
害（ファイルシステムの破壊によるデータ消失など）やシステム復旧に関し
ての責任なども負いません。

   本ソフトを使用するか否かは、ご自分の責任で判断してください。
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
トラブルへの対処方法は文中に簡単にまとめてあります。
                                                        村山正之
●●●●●●●警告●●●●●●●警告●●●●●●●警告●●●●●●●


1. 概要

本ソフトは、VIA社 VT6122チップを使用したPCI Giga-bit ethernet
カードを Solarisで使用するためのドライバです。ライセンス条件はBSDライセ
ンスです。


２．外部仕様と動作条件

デバイスドライバのバイナリのパス: /kernel/drv/vel

デバイス名: /dev/velN (Nはユニット番号)

例えば、ifconfig コマンドでのデバイスを指定する場合には、インスタンス
番号をつけて、
  ifconfig vel0
のようになります。

本ソフトの動作確認をしたPCIカードは以下の通りです。
VT6122 - 玄人志向 GbE
(本ソフトはカードメーカとは一切関係ありませんので、問い合わせなどをし
ないようにお願いします)

対応しているOSはSolaris x86です。
動作確認は以下の構成で確認しました。
Solaris8 10/00, CPU: Pentium !!, Chipset Intel 440BX
Solaris10 build72, CPU: AMD Athlon2800+, Chipset VIA K8T800


３．インストールの準備
(1) PCIネットワークカードをＰＣに取り付けてSolarisをブートしてください。

(2) ドライバのファイルをコピーしてください。
        # gunzip -cd vel-x.x.x.tar.gz | tar xf -

(3) ネットワークカード用のホスト名を /etc/hosts ファイルに登録してくだ
   さい。

(4) objとMakefileファイルをシステム構成にしたがってリンクし直してください。
defaultはi386とgccです。

        % cd /.../vel-x.x.x
        % rm obj Makefile
        % ln -s Makefile.${KARCH}_${COMPILER} Makefile
        % ln -s ${KARCH} obj

  ここで ${KARCH} は `isainfo -n` の結果です。${COMPILER} は gcc または
suncc です。


(5) バイナリの作成（sparcのみ）
本ドライバはsparcプラットフォームでも solaris8 10/00以降であれば動作する
はずです。それ以前のsolarisのリリースにはgldドライバが含まれていないため
動作しません。ただし、まだテストしていません。
sparc用のバイナリは配布ファイルには含まれていませんのでSun Cコンパイラ
もしくはgccでコンパイル願います。テストやインストールの前に以下の手順を
実行してください。

        % /usr/ccs/bin/make

(6) バイナリの作成（OpenSolarisのみ）
本ドライバはOpenSolarisのGLD v3インタフェースでも利用できます。以下の
手順で再コンパイルしてください。

        % rm Makefile.config
        % ln -s Makefile.config_gld3 Makefile.config
        % /usr/ccs/bin/make

４. テスト
インストールの前にはテストの実施をお願いします。

        # cd vel-x.x.x
        # /usr/ccs/bin/make install
        # ./adddrv.sh
        # /usr/ccs/bin/make uninstall (solaris7では実施しないこと）
        # modload obj/vel
        # devfsadm -i vel    (solaris7では drvconfigの後、-r付きでリブート）
        # ifconfig velN plumb
        # ifconfig -a	    ( velNのエントリが表示されます）
        # ifconfig velN YOUR-HOST-NAME
        # ifconfig velN      ( 表示されたIPアドレスが正しいことを確認
　　　　　　　　　　　　　　　してください）
        # ifconfig velN up   (これでtelnet pingなどが動くようになりま
                              す）

５．インストール手順
テストで動作を確認にした場合に限り、インストールしてください。

(1) ドライバを /kernel/drv ディレクトリにコピーします。
	# cd /.../vel-x.x.x
	# /usr/ccs/bin/make install

    テストを実施していない場合はここで以下を実行して下さい。
            # ./adddrv.sh
            # devfsadm -i vel (solaris7では drvconfigの後、-r付きでリブート）


(2) 各インタフェースカードに対してネットワーク設定をします。以下のファ
    イルにSolarisとしてのネットワーク設定をしてください。
	# /etc/hostname.velN
			(Nは数字、たとえば、 /etc/hostname.vel0)

(3) OSをリブートします。
	# init 6


６．トラブルシューティング
○ドライバロード時（もしくはOSブート時）にOSがpanicし、システムが立ち上
  がらなくなった場合。

  いったんネットワークインタフェースカードを抜いてOSをブート後、OSへの
  ドライバの登録を抹消してください。OSのドライバ登録の抹消は以下の手順
  で行えます。
     # rem_drv vel

  もしくは、solarisを -a オプションをつけてブートし、systemファイルをデ
  フォルト[etc/system]から /etc/system.novelに差し替えてください。これで
　velドライバがカーネルにロードされなくなります。system.novelは、 
  make install にて自動的に作成されます。

○リブートしてOSは立ち上がるが、ネットワークインタフェースが動作しない
  場合

・デバイスは認識されているか？
  ifconfig -aを実行してください。 velNが表示されますか？
  表示されている場合は、ドライバは正しく認識されていますので、IPアドレ
  スなどのネットワーク設定に問題がある可能性があります。

・ケーブルの接続に問題ないか？
  ifconfig で velNが見えるのに通信できない場合は、ケーブルの接続な
  どに問題がある可能性もあります。
  この場合は、snoop -P -d velN で snoopコマンドを起動し、ネットワ
  ークにつながれた他のホストからパケットを当該ホスト宛に流してください。
  (ping で可）。snoopがログを正常に出力すれば、ケーブルはつながっていま
  す。少なくとも受信側はokです。

  送信ができているかどうかは、ほかのホストで同様のことをして、velから
  送信したパケットが受信できているかどうか確認してください。
  ここまでの動作が確認できても、まだIP的につながらないというのは、十中
  八九、IP関連のネットワーク設定の問題です。

○ネットワークインタフェースの送受信の状態（統計情報）は
  netstat -k velN
 で得られます。-kはman には記載されていない隠しオプションですが、雑誌　
 SunWorldの記事で知りました。このコマンドは便利なのでお勧めです。


テスト中などにSolarisがパニックした場合には、以下の情報をお送りください。
できる範囲で調査します。

  (1) /var/adm/messages

  (2) prtconf -pv の出力結果

  (3) prtconf -v の出力結果

  (4) OSダンプへのadb の出力結果
  Solarisのコアダンプは unix.N と vmcore.N  の２つのファイルから構成さ
  れており /var/crash/ホスト名のディレクトリにあります。

   'adb -k unix.N vmcore.N'を実行して以下のサブコマンドの情報
   $c   (stack trace back が表示されます)
   $<msgbuf   (OSのメッセージファイルの最後の部分が表示されます)
   ^D         (adbを終了します)

以上
